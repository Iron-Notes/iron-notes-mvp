<link rel="stylesheet" href="/stylesheets/modal.css">

<a href="/notes/create" class="btn btn-outline-primary m-2" data-bs-toggle="modal" data-bs-target="#modal-create">
    <h3 style="margin:0; padding-top: 10px;" class="d-flex fa-regular fa-note-sticky">
        <p>Add Note</p>
    </h3>
</a>
<div class="row">
    {{#each notes}}
    <div class="col-xl-2 col-lg-3 col-md-6 col-sm-12 pt-3">
        <div class="card" style="max-height: 20vh; overflow-y: auto">
            <div class="d-flex justify-content-end">
                <button class="btn btn-outline-warning fa-regular fa-pen-to-square m-1" data-bs-toggle="modal"
                    data-bs-target="#modal-edit" data-note-id="{{this._id}}"></button>
                <form class="delete-form" style="margin:0" method="post" action="/notes/{{this._id}}/delete">
                    <button type="submit" class="btn btn-outline-danger fa-regular fa-trash-can m-1"></button>
                </form>
            </div>
            <div class="card-body">
                <h5 class="card-title" data-note-id="{{this._id}}">{{this.title}}</h5>
                <hr>
                <div>
                    <p class="card-text">{{this.description}}</p>
                    {{#if this.imageURL}}
                    <img src="{{this.imageURL}}" class="card-img" alt="Image missing">
                    {{else}}
                    <img src="" class="card-img" alt="Image missing" hidden>
                    {{/if}}
                </div>
            </div>
        </div>
    </div>
    {{/each}}
</div>

<form method="post" action="/notes/create" enctype="multipart/form-data">
    <div class="modal fade" id="modal-create">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-fullscreen-md-down">
            <div class="modal-content">
                <div class="modal-header">
                    <input class="modal-input" type="text" name="title" placeholder="Title" required></input>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <textarea class="modal-textarea" name="description" rows="10" placeholder="Note"
                        required></textarea>
                </div>
                <div class="modal-footer">
                    <div class="input-group mb-3">
                        <input type="file" name="note-image" class="form-control-file form-control"
                            placeholder="File Path..." aria-label="File Path..." />
                        <button type="submit"
                            class="btn btn-outline-success fa-regular fa-pen-to-square m-1 fa-regular fa-floppy-disk"></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<form id="edit-modal-form" method="post" action="" enctype="multipart/form-data">
    <div class="modal fade" id="modal-edit">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-fullscreen-md-down">
            <div class="modal-content">
                <div class="modal-header">
                    <input id="edit-modal-title" class="modal-input" type="text" name="title" placeholder="Title"
                        required>
                    <button class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <textarea id="edit-modal-note" class="modal-textarea" name="description" rows="10"
                        placeholder="Note" required></textarea>
                    <img src="" id="edit-modal-card-img" class="edit-modal-card-img" alt="Image missing">
                </div>
                <div class="modal-footer">
                    <div class="input-group mb-3">
                        <input type="file" name="note-image" class="form-control-file form-control" />
                        <button type="submit"
                            class="btn btn-outline-success fa-regular fa-pen-to-square m-1 fa-regular fa-floppy-disk"></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

{{#unless notes}}
<h2>Add a new Note!</h2>
{{/unless}}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get all the necessary elements
        const btnEditList = document.querySelectorAll(".btn-outline-warning");
        const editCardTitleList = document.querySelectorAll(".card-title");
        const editCardNoteList = document.querySelectorAll(".card-text");
        const editModalTitle = document.getElementById("edit-modal-title");
        const editModalNote = document.getElementById("edit-modal-note");
        const modalForm = document.getElementById("edit-modal-form");
        const cardImgList = document.querySelectorAll(".card-img");
        const editModalCardImg = document.getElementById('edit-modal-card-img');

        // Add click event listener to each button
        btnEditList.forEach(function (btnEdit, index) {
            btnEdit.addEventListener("click", function () {
                // Get the corresponding card title and note and copy it to the modals
                const cardTitle = editCardTitleList[index].innerText;
                const cardNote = editCardNoteList[index].innerText;
                const cardId = editCardTitleList[index].getAttribute("data-note-id");
                editModalTitle.value = cardTitle;
                editModalNote.value = cardNote;
                modalForm.action = `/notes/${cardId}/edit`;
                // Copy the src of card-img to the edit-modal-card-img
                editModalCardImg.src = cardImgList[index].src;
            });
        });
    });
</script>

<script>
    // Function to convert phone numbers, emails, and websites into clickable links
    function convertTextLinks() {
        const cards = document.getElementsByClassName("card");
        const titles = document.getElementsByClassName("card-title");
        const bodies = document.getElementsByClassName("card-text");
        const phoneRegex = /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s./0-9]*$/g;
        const emailRegex = /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b/g;
        const websiteRegex = /(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g;

        for (let i = 0; i < cards.length; i++) {
            let title = titles[i];
            let body = bodies[i];
            let titleText = title.innerHTML;
            let bodyText = body.innerHTML;
            let titleWords = titleText.split(" ");
            let bodyWords = bodyText.split(" ");

            for (let j = 0; j < titleWords.length; j++) {
                let titleWord = titleWords[j];

                if (phoneRegex.test(titleWord)) {
                    titleText = titleText.replace(titleWord, `<a href="tel:${titleWord.replace(/[-.\s()]/g, '')}">${titleWord}</a>`);
                } else if (emailRegex.test(titleWord)) {
                    titleText = titleText.replace(titleWord, `<a href="mailto:${titleWord}">${titleWord}</a>`);
                } else if (websiteRegex.test(titleWord)) {
                    titleText = titleText.replace(titleWord, `<a href="${titleWord}">${titleWord}</a>`);
                }
            }

            for (let k = 0; k < bodyWords.length; k++) {
                let bodyWord = bodyWords[k];

                if (phoneRegex.test(bodyWord)) {
                    bodyText = bodyText.replace(bodyWord, `<a href="tel:${bodyWord.replace(/[-.\s()]/g, '')}">${bodyWord}</a>`);
                } else if (emailRegex.test(bodyWord)) {
                    bodyText = bodyText.replace(bodyWord, `<a href="mailto:${bodyWord}">${bodyWord}</a>`);
                } else if (websiteRegex.test(bodyWord)) {
                    bodyText = bodyText.replace(bodyWord, `<a href="${bodyWord}">${bodyWord}</a>`);
                }
            }
            title.innerHTML = titleText;
            body.innerHTML = bodyText;
        }
    }
    // Call the conversion function when the page is loaded
    window.onload = function () {
        convertTextLinks();
    };
</script>